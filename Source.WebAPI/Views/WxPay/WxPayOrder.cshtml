@using Source.Payment.Models.Enums;
@using Source.Payment.Models;
@using Source.Product.Models.Enums;
@using Source.Product.Models;
@{
    Layout = null;
    var order = ViewData["order"] as ProductOrder;
    var pay = ViewData["pay"] as PaymentOrder;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <title></title>
    <link rel="stylesheet" type="text/css" href="~/css/pay.css" />
</head>
<body>
    <div class="pay-margin">
        <div class="pay-order-info">
            <div class="pay-order-item pay-rows pay-space-between">
                <div class="title">商户订单号</div>
                <div class="content">@GuidEncoder.Encode(order.Id)</div>
            </div>

            <div class="pay-order-item pay-rows pay-space-between">
                <div class="title">总价</div>
                <div class="content">@order.Amount</div>
            </div>
            <div class="pay-order-item pay-rows pay-space-between">
                <div class="title">支付方式</div>
                <div class="content">@((PayMethod)pay?.PayMethod).GetDescriptionPay()</div>
            </div>
            <div class="pay-order-item pay-rows pay-space-between">
                <div class="title">支付状态</div>
                <div class="content">@((Source.Payment.Models.Enums.OrderState)pay?.OrderState).GetDescriptionPay()</div>
            </div>
            <div class="pay-order-item pay-rows pay-space-between">
                <div class="title">支付时间</div>
                <div class="content">@pay?.PaidTime.Value.ToString("yyyy-MM-dd HH:mm:ss")</div>
            </div>
        </div>
        @if (pay.OrderState == Source.Payment.Models.Enums.OrderState.Paid)
        {
            // TODO 需要考虑订单的当前支付订单支付失败的情况下，直接发起新的支付订单的按钮
            <div class="pay-prompt pay-rows pay-flex-center">支付完成</div>
            <div class="btn-group pay-rows pay-flex-center" onclick="back()">
                <div class="pay-btn-confirm">
                    <div class="btn-title">去取餐</div>
                </div>
            </div>
        }
        else
        {
            <div id="pay" class="btn-group pay-rows pay-flex-center">
                <div class="pay-btn-confirm">
                    <div class="btn-title">支付</div>
                </div>
            </div>
        }
    </div>
    <script>
        document.addEventListener('WeixinJSBridgeReady', function onBridgeReady() {
            document.getElementById("pay").onclick=function(){
                WeixinJSBridge.invoke('getBrandWCPayRequest', {
                    "appId": "@ViewData["appId"]", //公众号名称，由商户传入
                    "timeStamp": "@ViewData["timeStamp"]", //时间戳
                    "nonceStr": "@ViewData["nonceStr"]", //随机串
                    "package": "@Html.Raw(ViewData["package"])",//扩展包
                    "signType": "MD5", //微信签名方式:MD5
                    "paySign": "@ViewData["paySign"]" //微信签名
                }, function (res) {
                    if (res.err_msg == "get_brand_wcpay_request:ok") {
                        alert("支付成功!");
                        window.location.href = "@ViewData["successUrl"]";
                    }
                    else if (res.err_msg == "get_brand_wcpay_request:cancel") {
                        alert("取消支付!");
                    }
                    else {
                        alert("支付失败，错误代码" + res.err_msg + "!");
                    }
                });
            }
        }, false);

        function back() {
            window.location.href = "/Home/WxPayIndex?orderId=@order.Id";
        }
    </script>
    <style type="text/css" scoped>
        a {
            color: #ffffff !important;
        }
    </style>
</body>
</html>
